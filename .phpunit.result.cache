C:37:"PHPUnit\Runner\DefaultTestResultCache":2133:{a:2:{s:7:"defects";a:15:{s:34:"CollectionTest::checkIfDataPresent";i:4;s:33:"EmployeeTest::testGetEmployeeName";i:4;s:32:"EmployeeTest::testGetEmployeeAge";i:4;s:39:"EmployeeTest::testGetEmployeeNameAndAge";i:4;s:25:"SampleTest::checkIfHasKey";i:5;s:31:"SampleTest::testTrueReturnstrue";i:5;s:30:"SampleTest::checkPerposeofLoan";i:4;s:34:"SampleTest::testExpectBarActualBaz";i:3;s:24:"SampleTest::testConsumer";i:3;s:20:"SampleTest::testStub";i:4;s:65:"SampleTest::testPositiveForassertGreaterThanOrEqualWithGreaterVal";i:3;s:63:"UnitTest::testPositiveForassertGreaterThanOrEqualWithGreaterVal";i:3;s:32:"UnitTest::testcheckPerposeofLoan";i:4;s:48:"UnitTest::testPositiveassertEqualsWithGreaterVal";i:4;s:51:"UnitTest::testPositiveassertEqualsWithGreaterValPin";i:3;}s:5:"times";a:24:{s:34:"CollectionTest::checkIfDataPresent";d:0.324;s:33:"EmployeeTest::testGetEmployeeName";d:0;s:32:"EmployeeTest::testGetEmployeeAge";d:0;s:39:"EmployeeTest::testGetEmployeeNameAndAge";d:0;s:31:"SampleTest::testTrueReturnstrue";d:0.007;s:25:"SampleTest::checkIfHasKey";d:0;s:30:"SampleTest::checkPerposeofLoan";d:0.001;s:34:"SampleTest::testExpectFooActualFoo";d:0.011;s:34:"SampleTest::testExpectBarActualBaz";d:0.019;s:29:"SampleTest::testProducerFirst";d:0.008;s:30:"SampleTest::testProducerSecond";d:0;s:24:"SampleTest::testConsumer";d:0.002;s:20:"SampleTest::testStub";d:0.063;s:63:"SampleTest::testPositiveForassertGreaterThanOrEqualWithEqualVal";d:0.008;s:65:"SampleTest::testPositiveForassertGreaterThanOrEqualWithGreaterVal";d:0.003;s:61:"UnitTest::testPositiveForassertGreaterThanOrEqualWithEqualVal";d:0.011;s:63:"UnitTest::testPositiveForassertGreaterThanOrEqualWithGreaterVal";d:0.008;s:32:"UnitTest::testcheckPerposeofLoan";d:0.007;s:48:"UnitTest::testPositiveassertEqualsWithGreaterVal";d:0;s:49:"UnitTest::testPositiveassertEqualsWithGreaterVal1";d:0;s:51:"UnitTest::testPositiveassertEqualsWithGreaterValPin";d:0;s:50:"UnitTest::testPositiveForassertEqualWithGreaterVal";d:0.007;s:63:"UnitTest::testPositiveForassertEqualWithGreaterValPerposeofLoan";d:0.007;s:58:"UnitTest::testPositiveassertEqualsWithGreaterValLoanAmount";d:0;}}}